binomial coefficients:
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
...

example:
for n = 4
16 = 2^4 = 1 + 4 + 6 + 4 + 1 => 5 levels (The root has depth 0)
total depth: 1 * 0 + 4 * 1 + 6 * 2 + 4 * 3 + 1 * 4 = 32
average depth : 32 / 16 = 2 = 4 / 2 = n / 2.

guess: average depth = n / 2 (total 2^n nodes)
Proof by induction:
For N = 2^1(n = 1), total depth: 1 * 0 + 1 * 1 = 1. Average depth: 1 / 2 = n / 2(n = 1) => true.
For N = 2^k(n = k), assume that the average depth of all nodes in each subtree is k / 2, When two each of these trees
want to be a new tree, we prove that the new tree's average depth is (k + 1) / 2.
When an subtree is placed underneath the other, the subtree's all nodes will have their depth increased by 1, total
increasing will be the number of nodes of that subtree(2^k).
The total depth after the union operation:
k / 2 * 2^k + (k / 2 * 2^k + 2^k) = 2^k * (k + 1)

The number of node in the new tree is 2 * 2^k = 2^(k + 1)
Average depth: (2^k * (k + 1)) / (2^(k + 1))  = (k + 1) / 2
